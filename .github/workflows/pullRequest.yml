name: Pull Request

on:
  pull_request:
    branches:
      - development
  workflow_dispatch:

jobs:
  lint:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Install SwiftLint
        run: |
          brew install swiftlint
          which swiftlint
          swiftlint version

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Install Bundler
        run: gem install bundler

      - name: Install gems
        run: bundle install

      - name: Run SwiftLint
        run: bundle exec fastlane lint

      - name: Upload lint results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-results
          path: fastlane/lintResults.html

  test:
    runs-on: macos-latest
    needs: lint
    env:
      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 120
      FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 10
    steps:
      - uses: actions/checkout@v2

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Install Bundler
        run: gem install bundler

      - name: Install gems
        run: bundle install

      - name: Show available simulators
        run: xcrun simctl list devices

      - name: Swift Packages Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            Build/SourcePackages
            Build/Build/Products
          key: ${{ runner.os }}-deps-v1-${{ hashFiles('BlindIDCase.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
          restore-keys: ${{ runner.os }}-deps-v1-

      - name: Run Tests (No Cache)
        if: steps.cache.outputs.cache-hit != 'true'
        run: bundle exec fastlane unit_test

      - name: Run Tests (Cache)
        if: steps.cache.outputs.cache-hit == 'true'
        run: bundle exec fastlane unit_test skip_package_dependencies_resolution:true
